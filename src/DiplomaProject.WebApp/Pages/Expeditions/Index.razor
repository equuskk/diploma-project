@page "/expeditions/index"
@using DiplomaProject.Application.Expeditions.Queries
@using DiplomaProject.Application.Expeditions.Commands
@inject IMediator Mediator
@inject IMatToaster Toaster
@inject NavigationManager NavigationManager
@attribute [Authorize]

<MatH5>Экспедиции</MatH5>

<AuthorizeView Policy="@nameof(RoleNames.SeniorEmployee)">
    <MatButton Raised Link="/expeditionMaster/index">Добавить экспедицию</MatButton>
</AuthorizeView>

@if(_expeditions == null)
{
    <MatProgressBar Indeterminate="true"/>
}
else
{
    <MatTable Items="@_expeditions" class="mat-elevation-z5" ShowFooter="false" ShowPaging="false" UseSortHeaderRow="true">
        <MatTableHeader>
            <th>#</th>
            <th>С даты</th>
            <th>По дату</th>
            <th></th>
            <th></th>
        </MatTableHeader>
        <MatTableRow>
            <td>@context.Id</td>
            <td>@context.FromDate.ToString(DateTimeFormat)</td>
            <td>@context.ToDate.ToString(DateTimeFormat)</td>
            <td>
                <MatButton Outlined OnClick="() => DetailsClick(context)">Подробнее</MatButton>
            </td>
            <td>
                <AuthorizeView Policy="@nameof(RoleNames.SeniorEmployee)" Context="Auth">
                    <MatButton Style="background-color: #B00020" Unelevated="true" OnClick="() => OpenDeleteDialog(context)">Удалить</MatButton>
                </AuthorizeView>
            </td>
        </MatTableRow>
    </MatTable>
}

<MatDialog @bind-IsOpen="@IsDeleteDialogOpened">
    <MatDialogTitle>Удаление экспедиции</MatDialogTitle>
    <MatDialogContent>
        <MatBody1>Вы действительно хотите удалить данную экспедицию?</MatBody1>
        <MatBody2>С даты: @SelectedExpedition?.FromDate.ToString(DateTimeFormat)</MatBody2>
        <MatBody2>По дату: @SelectedExpedition?.ToDate.ToString(DateTimeFormat)</MatBody2>
        <MatBody1 Class="text-danger">
            ВНИМАНИЕ! Данное действие приведёт к удалению всех связанных с экспедицией данных!
        </MatBody1>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="() => IsDeleteDialogOpened = false">Нет</MatButton>
        <MatButton Class="button-danger" Unelevated="true" OnClick="DeleteExpedition">Да, удалить</MatButton>
    </MatDialogActions>
</MatDialog>

@code {
    private Expedition[] _expeditions;
        const string DateTimeFormat = "d MMMM yyyy года, dddd\n(Часовой пояс: K)";

    public bool IsDeleteDialogOpened { get; set; }
    public Expedition SelectedExpedition { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _expeditions = await Mediator.Send(new GetAllExpeditionsQuery());
    }

    private void DetailsClick(Expedition item)
    {
        NavigationManager.NavigateTo($"/expeditions/details/{item.Id}");
    }

    private void OpenDeleteDialog(Expedition item)
    {
        SelectedExpedition = item;
        IsDeleteDialogOpened = true;
    }

    private async Task DeleteExpedition()
    {
        const string message = "Экспедиция успешно удалена!";
        const string title = "Удаление экспедиции";

        try
        {
            await Mediator.Send(new DeleteExpeditionCommand
            {
                Id = SelectedExpedition.Id
            });
            Toaster.Add(message, MatToastType.Success, title);
            _expeditions = await Mediator.Send(new GetAllExpeditionsQuery());
            SelectedExpedition = null;
        }
        catch(Exception e)
        {
            Toaster.Add(e.Message, MatToastType.Danger, title);
        }
        IsDeleteDialogOpened = false;
    }

}